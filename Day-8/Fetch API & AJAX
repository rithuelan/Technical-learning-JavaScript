<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Simple CRUD with Fetch API & AJAX</title>
  <style>
    body { font-family: Arial; padding: 20px; background: #f5f5f5; }
    input { margin: 5px; padding: 5px; }
    button { padding: 5px 10px; margin: 5px; cursor: pointer; }
    .user { background: #fff; padding: 10px; margin: 5px 0; border-radius: 5px; }
    .user button { margin-left: 5px; }
  </style>
</head>
<body>

<h2>User Management Dashboard (Simple)</h2>

<h3>Add / Update User</h3>
<input type="hidden" id="userId">
<input type="text" id="name" placeholder="Name">
<input type="text" id="email" placeholder="Email">
<button onclick="addOrUpdateUser()">Add / Update User</button>

<h3>Actions</h3>
<button onclick="fetchUsers()">Fetch Users (Promise)</button>
<button onclick="fetchUsersAsync()">Fetch Users (Async/Await)</button>
<button onclick="fetchUsersXHR()">Fetch Users (XHR)</button>

<div id="output">Output will appear here...</div>

<script>
const output = document.getElementById("output");
const apiURL = "https://jsonplaceholder.typicode.com/users";

// ------------------ Display Users ------------------
function displayUsers(users){
  output.innerHTML = "";
  users.slice(0,5).forEach(user => {
    output.innerHTML += `
      <div class="user" id="user-${user.id}">
        ${user.name} (${user.email})
        <button onclick="prepareUpdate(${user.id}, '${user.name}', '${user.email}')">Update</button>
        <button onclick="deleteUser(${user.id})">Delete</button>
      </div>
    `;
  });
}

// ------------------ Fetch Users (Promises) ------------------
function fetchUsers(){
  output.innerHTML = "Loading...";
  fetch(apiURL)
    .then(res => res.json())
    .then(data => displayUsers(data))
    .catch(err => output.innerHTML = "Error: " + err.message);
}

// ------------------ Fetch Users (Async/Await) ------------------
async function fetchUsersAsync(){
  output.innerHTML = "Loading...";
  try{
    const res = await fetch(apiURL);
    const data = await res.json();
    displayUsers(data);
  } catch(err){
    output.innerHTML = "Error: " + err.message;
  }
}

// ------------------ Fetch Users (XHR) ------------------
function fetchUsersXHR(){
  output.innerHTML = "Loading...";
  const xhr = new XMLHttpRequest();
  xhr.open("GET", apiURL);
  xhr.setRequestHeader("Content-Type","application/json");
  xhr.onload = function(){
    if(xhr.status === 200){
      const data = JSON.parse(xhr.responseText);
      displayUsers(data);
    } else output.innerHTML = "Request failed";
  };
  xhr.onerror = function(){ output.innerHTML = "Network error"; };
  xhr.send();
}

// ------------------ Add / Update User ------------------
function addOrUpdateUser(){
  const id = document.getElementById("userId").value;
  const name = document.getElementById("name").value;
  const email = document.getElementById("email").value;

  if(!name || !email) { alert("Enter name and email!"); return; }

  const userData = { name, email, username: name.replace(/\s/g,"") };

  if(id){ // Update
    fetch(`${apiURL}/${id}`,{
      method:"PUT",
      headers: { "Content-Type":"application/json" },
      body: JSON.stringify(userData)
    })
    .then(res=>res.json())
    .then(data => {
      output.innerHTML += `<p>User Updated! ID: ${data.id}</p>`;
      fetchUsers();
      resetForm();
    });
  } else { // Add
    fetch(apiURL,{
      method:"POST",
      headers: { "Content-Type":"application/json" },
      body: JSON.stringify(userData)
    })
    .then(res=>res.json())
    .then(data => {
      output.innerHTML += `<p>User Added! ID: ${data.id}</p>`;
      fetchUsers();
      resetForm();
    });
  }
}

// ------------------ Prepare Update ------------------
function prepareUpdate(id,name,email){
  document.getElementById("userId").value = id;
  document.getElementById("name").value = name;
  document.getElementById("email").value = email;
}

// ------------------ Delete User ------------------
function deleteUser(id){
  fetch(`${apiURL}/${id}`,{ method:"DELETE" })
    .then(res=>{
      if(res.ok){
        document.getElementById(`user-${id}`).remove();
        output.innerHTML += `<p>User Deleted! ID: ${id}</p>`;
      } else throw new Error("Delete failed");
    })
    .catch(err => output.innerHTML += `<p>Error: ${err.message}</p>`);
}

// ------------------ Reset Form ------------------
function resetForm(){
  document.getElementById("userId").value = "";
  document.getElementById("name").value = "";
  document.getElementById("email").value = "";
}
</script>
</body>
</html>
